package {		import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.text.TextField;	import fl.controls.Button;		public class XMLSocketSample extends Sprite {				private var xmlSocket:XMLSocket = new XMLSocket();		private var hostName:String;		private var port:uint;		private var connectionOpen:Boolean = false;		public var connect_btn:Button;		public var send_btn:Button;		public var close_btn:Button;		public var conversation:TextField;		public var sendTxt:TextField;				public function XMLSocketSample() {			hostName = "localhost";			port = 8080;								xmlSocket.addEventListener(Event.CONNECT, onSocketConnection, false, 0, true);			xmlSocket.addEventListener(DataEvent.DATA, onSocketResponse, false, 0, true);			xmlSocket.addEventListener(Event.CLOSE, onSocketClose, false, 0, true);			xmlSocket.addEventListener(IOErrorEvent.IO_ERROR, onIOError, false, 0, true);						connect_btn.addEventListener(MouseEvent.CLICK, onSocketConnect, false, 0, true);			send_btn.addEventListener(MouseEvent.CLICK, onSocketSend, false, 0, true);			close_btn.addEventListener(MouseEvent.CLICK, onSocketClose, false, 0, true);		}		private function onSocketConnection(evt:Event):void {			trace("Server connected."); 			connectionOpen = true;		}				private function onSocketResponse(evt:DataEvent):void {			var xmlResponse:XML = new XML(evt.data);			//<msg user="IMChatting">Hey, NYC...</msg>			conversation.appendText(xmlResponse.@user + ": " + xmlResponse);		}				private function onIOError(evt:IOErrorEvent):void {			trace("ioErrorHandler: " + evt.text);		}				private function onSocketConnect(evt:MouseEvent):void {			xmlSocket.connect(hostName, port);		}				private function onSocketSend(evt:MouseEvent):void {			if (connectionOpen) {				var xmlSend:XML = <msg user="chatterNYC">{sendTxt.text}</msg>				//<msg user="chatterNYC">Anyone there?</msg>				xmlSocket.send(xmlSend);			}		}				private function onSocketClose(evt:Event):void {			xmlSocket.close();			connectionOpen = false;		}	}}